package controller;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.logging.log4j.core.jackson.Log4jJsonObjectMapper;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.mysql.cj.xdevapi.JsonParser;

import domain.CommentVO;
import service.CommentService;
import service.CommentServiceImpl;


@WebServlet("/cmt/*")
public class CommentController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private static final Logger log = LoggerFactory.getLogger(CommentController.class);
	//목적지 주소로 보내지 않기때문에 destPage 없음
	//비동기 통신으로 요청이 온 곳으로 다시 돌려보냄
	
	private int isOk;
	private CommentService csv;
	
    public CommentController() {
        csv = new CommentServiceImpl();
    }


	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8"); 
	
		String uri = request.getRequestURI();	
		String pathUri = uri.substring("/cmt/".length());  
		String path = ""; //앞의 기능
		String pathVar = ""; //숫자
		
		if(pathUri.contains("/")) {
			path = pathUri.substring(0, pathUri.lastIndexOf("/"));//modify
			pathVar = pathUri.substring(pathUri.lastIndexOf("/"+1)); // 1
		}else { // "/"가 없는 경우
			path = pathUri;
		}
		
		log.info(">>pathUri: " +pathUri);
		log.info(">>path: " +path);
		log.info(">>>pathVar: "+pathVar);
		
		
		switch(path) {
		case "post":
			try {
				StringBuffer sb = new StringBuffer();
				String line = "";
				BufferedReader br = request.getReader(); 
				while((line = br.readLine()) != null) {
					sb.append(line); 
				}
				log.info(">>>sb: " + sb.toString());
				
				//객체로 생성
				JSONParser parser = new JSONParser(); 
				JSONObject jsonObj = (JSONObject) parser.parse(sb.toString());
				
				int bno = Integer.parseInt(jsonObj.get("bno").toString());
				String writer = jsonObj.get("writer").toString();
				String content = jsonObj.get("content").toString();
				CommentVO cvo = new CommentVO(bno,writer,content);
				
				isOk = csv.post(cvo);
				log.info(">>> post : "+(isOk > 0 ? "성공" : "실패"));
				
				PrintWriter out = response.getWriter();
				out.print(isOk);
				
			} catch (Exception e) {
				log.info("controller error");
				e.printStackTrace();
			}
			break;
		 
		case "list":
			try {
				int bno = Integer.parseInt(pathVar);
			List<CommentVO> list = csv.getList(bno);

			JSONObject[] jsonObjArr = new JSONObject[list.size()]; 
			JSONArray jsonObjList = new JSONArray();
			for(int i=0; i<list.size(); i++) {
				jsonObjArr[i] = new JSONObject();
				jsonObjArr[i].put("cno", list.get(i).getCno());
				jsonObjArr[i].put("bno", list.get(i).getBno());
				jsonObjArr[i].put("writer", list.get(i).getWriter());
				jsonObjArr[i].put("content", list.get(i).getContent());
				jsonObjArr[i].put("reg_date", list.get(i).getReg_date());
				
				jsonObjList.add(jsonObjArr[i]);
			}
			
			String jsonData = jsonObjList.toJSONString();
			PrintWriter out = response.getWriter();
			out.print(jsonData);
			
			} catch (Exception e) {
				log.info("controller error!");
				e.printStackTrace();
			}
			break;
		
		
		
		
		
		
		
		
		}
		
		
		

	}	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}


	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

}

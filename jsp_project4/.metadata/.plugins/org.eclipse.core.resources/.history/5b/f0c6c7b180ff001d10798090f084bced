package controller;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.BoardVO;
import domain.PagingVO;
import handle.PagingHandler;
import net.coobird.thumbnailator.Thumbnails;
import service.BoardService;
import service.BoardServiceImpl;


@WebServlet("/brd/*")
public class BoardController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private static final Logger log = LoggerFactory.getLogger(BoardController.class);
	private RequestDispatcher rdp;
	private String destPage; 
	private int isOk;
	private BoardService bsv;
	private String savePath;
	private final String UTF8 = "UTF-8";
	

    public BoardController() {
    	bsv = new BoardServiceImpl();
    	
    }


	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8"); 
		response.setContentType("text/html; charset=utf-8");
		
		String uri = request.getRequestURI();
		log.info(">>uri: " +uri);
		String path = uri.substring(uri.lastIndexOf("/")+1);
		log.info(">>path: " +path);
		
		switch(path) {
		//게시글 작성
		case "register":
			destPage = "/board/register.jsp";
			break;
		case "insert":
			try {
				savePath = getServletContext().getRealPath("/_fileUpload");
				log.info(">>>파일 저장 경로: " + savePath);
				
				File fileDir = new File(savePath);
				DiskFileItemFactory fileItemFactory = new DiskFileItemFactory(); 
				fileItemFactory.setRepository(fileDir);
				fileItemFactory.setSizeThreshold(2*1024*1024);
				
				BoardVO bvo = new BoardVO();
				
				ServletFileUpload fileUpload = new ServletFileUpload(fileItemFactory);
				
				List<FileItem> itemList = fileUpload.parseRequest(request);
				for(FileItem item : itemList) {
					switch(item.getFieldName()) { 
					case "title":
						bvo.setTitle(item.getString(UTF8)); 
						break;
					case "writer": 
						bvo.setWriter(item.getString(UTF8));
						break;
					case "content":
						bvo.setContent(item.getString(UTF8));
						break;
					case "image_file":
						if(item.getSize() > 0) { 
							String fileName = item.getName().substring(item.getName().lastIndexOf("/")+1);
							log.info(">>>fileName 시간넣기 전 : " + fileName);				
							fileName = System.currentTimeMillis()+"_"+fileName; 
							log.info(">>>fileName 시간넣은 후 : " + fileName);
							
							File uploadFilePath = new File(fileDir+File.separator+fileName);
							log.info(">>>실제 업로드하는 파일의 경로: "+ uploadFilePath);
							
							try {
								item.write(uploadFilePath); 
								bvo.setImage_file(fileName);
								
								
								Thumbnails.of(uploadFilePath).size(75, 75)
								.toFile(new File(fileDir+File.separator+"th_"+fileName));
								
							} catch (Exception e) {
								log.info("파일 저장 오류 발생! file writer on disk fail");
								e.printStackTrace();
							}							
						}
						break;
					}
				}		
				isOk = bsv.insert(bvo);
				log.info(">>> insert " + (isOk > 0 ? "성공" : "실패"));
				
			} catch (Exception e) {
				log.info("controller오류");
				e.printStackTrace();
			}
			destPage = "/brd/page"; 
			break;
		
		//게시글 전체 출력
		case "list":
			try {
				List<BoardVO> list = new ArrayList<>();
				list = bsv.list();
				request.setAttribute("list", list);
				
			} catch (Exception e) {
				log.info("controller error!");
				e.printStackTrace();
			}
			destPage = "/brd/page";
			break;
		
		//게시글 상세보기
		case "detail":
			try {
				int bno = Integer.parseInt(request.getParameter("bno"));
				BoardVO bvo = new BoardVO();
				request.setAttribute("bvo", bsv.detail(bno));
					
			} catch (Exception e) {
				log.info("controller error!");
				e.printStackTrace();
			}
			
			destPage = "/board/detail.jsp";
			break;
		
		//게시글 수정
		case "modify_rdy":
			try {
				int bno = Integer.parseInt(request.getParameter("bno"));
				BoardVO bvo = new BoardVO();
				request.setAttribute("bvo", bsv.modify_rdy(bno));
			
			} catch (Exception e) {
				log.info("controller error!");
				e.printStackTrace();
			}
			
			destPage = "/board/modify.jsp";
			break;
			
		case "modify":	
			try {
				int bno = Integer.parseInt(request.getParameter("bno"));
				String title = request.getParameter("title");
				String content = request.getParameter("content");
				log.info(title);
				
				BoardVO bvo = new BoardVO(bno, title, content);
						
				isOk = bsv.modify(bvo);
				log.info(">>> modify :" + (isOk > 0 ? "성공" : "실패"));
				
			} catch (Exception e) {
				log.info("controller error!");
				e.printStackTrace();
			}
			
			destPage="/brd/page";
			break;
		
		//게시글 삭제
		case "remove":
			int bno = Integer.parseInt(request.getParameter("bno"));
			isOk = bsv.remove(bno);
			log.info(">>> remove : " + (isOk > 0 ? "성공" : "실패"));

			destPage="/brd/page";
			break;
		
		//게시글 출력 (마지막)
		case "page":
			try {
				int pageNo = 1;
				int qty = 10;
				
				String type ="";
				String keyword="";
				
				if(request.getParameter("type") != null) {
					type = request.getParameter("type");
					keyword = request.getParameter("keyword");
					log.info(">>> type : " + type + "/  >>> ketword: " + keyword);
					
				}
				
				
				if(request.getParameter("pageNo") != null) {
					pageNo = Integer.parseInt(request.getParameter("pageNo")); 
					qty = Integer.parseInt(request.getParameter("qty")); 
				}
				PagingVO pgvo = new PagingVO(pageNo, qty);
				
				pgvo.setType(type);
				pgvo.setKeyword(keyword);
				log.info(">>> pgvo set설정확인: "+pgvo.toString());
				
				int totCount = bsv.getTotal(pgvo);
				log.info("전체페이지의 수: "+totCount);
				

				List<BoardVO> list = bsv.getPageList(pgvo);
				log.info(">>> list.size: "+ list.size());
				
				PagingHandler ph = new PagingHandler(pgvo, totCount);
				request.setAttribute("pgh", ph);
				request.setAttribute("list", list);
				log.info("pageList 성공");	
				
			} catch (Exception e) {
				e.printStackTrace();
			}
			
			destPage = "/board/list.jsp";
			break;
		}
		
		rdp = request.getRequestDispatcher(destPage);
		rdp.forward(request, response);
		
	}


	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

}

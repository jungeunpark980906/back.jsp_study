package repository;

import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.BoardVO;
import orm.DatabaseBuilder;
import service.BoardService;

public class BoardDAOImpl implements BoardDAO {

	private static final Logger log = LoggerFactory.getLogger(BoardDAO.class);
	private SqlSession sql;

	private String BS = "BoardMapper.";
	
	public BoardDAOImpl() {
		new DatabaseBuilder(); //class객체 생성
		sql = DatabaseBuilder.getFactory().openSession(); //객체에서 펙토리를 가져와 sql연결
	}
	
	@Override
	public int insert(BoardVO bvo) {
		log.info(">>> insert DAO 진입");
		int isOk = sql.insert(BS+"reg", bvo); 
	
		
		if(isOk > 0 ) {
			sql.commit(); 
		} 
		return isOk;

	}

	@Override
	public List<BoardVO> selectList() {
		log.info(">>> list DAO 진입");
		List<BoardVO> list = sql.selectList(BS+"list");
		return list;
	}

	@Override
	public BoardVO selectOne(int bno) {
		log.info(">>> selectOne DAO 진입");
		BoardVO bvo = sql.selectOne(BS+"selectOne", bno);
		return bvo;
	}


	@Override
	//수정화면
	public BoardVO select(int bno) {
		log.info(">>> select DAO 진입");
		BoardVO bvo = sql.selectOne(BS+"select", bno);
		return bvo;
	}

	@Override
	public int update(BoardVO bvo) {
		log.info(">>> update DAO 진입");
		
		int isOk = sql.update(BS+"update", bvo); 
		
		if(isOk > 0 ) {
			sql.commit(); 
		} 
		return isOk;
	}

	@Override
	public int delete(int bno) {
		log.info(">>> delete DAO 진입");
		int isOk = sql.delete(BS+"delete", bno); 
		if(isOk > 0 ) {
			sql.commit(); 
		} 
		return isOk;
		
	}

	//카운트업데이트
	@Override
	public int updateCount(int bno) {
		int isOk= sql.update(BS+"updateCount",bno);
		if(isOk > 0 ) {
			sql.commit(); 
		} 
		return isOk;
	}

	@Override
	public int getTotal() {
		log.info(">>> getTotal DAO 진입");
		return sql.selectOne(BS+"cnt", null);
	}

}
